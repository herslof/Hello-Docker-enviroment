---
- name : setup Hello docker Environment
  hosts: localhost
  become: true
  vars:
    deploy_env : "{{ deploy_env  | default('production') }}"

  tasks:
    - name: Check if Docker is installed
      command: docker --version
      register: docker_installed
      ignore_errors: yes

    - name: Install Docker if not already installed
      apt:
        name: docker.io
        state: present
        update_cache: yes
      when: docker_installed.rc != 0

    - name: Ensure Docker compose is installed
      apt:
        name: docker-compose
        state: present

    - name: Build the hello-frontend Docker image
      community.docker.docker_image_build:
        name: hello-frontend
        path: "{{ playbook_dir }}/../hello-frontend"
        dockerfile: Dockerfile
        args:
          REACT_ENV_FILE: "env.{{ deploy_env }}"
        rebuild: "{{ 'always' if force_rebuild | default(false) else 'never' }}"
        tag: latest

    - name: Build the hello-backend Docker image
      community.docker.docker_image_build:
        name: hello-backend
        path: "{{ playbook_dir }}/../hello-backend"
        dockerfile: Dockerfile
        rebuild: "{{ 'always' if force_rebuild | default(false) else 'never' }}"
        tag: latest

    - name: pull necessary Docker images
      community.docker.docker_image:
        name: "{{item }}"
        source: pull
      loop:
        - grafana/loki:latest
        - grafana/promtail:latest
        - grafana/grafana:latest

    - name: Tear down Docker compose if running
      community.docker.docker_compose:
        project_src: "{{ playbook_dir }}/.."
        state: absent

    - name: start Docker compose
      community.docker.docker_compose:
        project_src: "{{ playbook_dir }}/.."
        build: yes
        recreate: always
        remove_orphans: yes

